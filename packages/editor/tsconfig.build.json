{
  
  "compilerOptions": {
    "composite": true,
    // 组件库依赖浏览器的 DOM API
    "lib": ["ESNext", "DOM", "DOM.Iterable"],
    "types": ["node"],
    // 项目的根目录
    "rootDir": "./src",
    // 项目基础目录
    "baseUrl": "./",
    // tsc 编译产物输出目录
    "outDir": "./dist",
    // 编译目标 js 的版本
    "target": "es2022",
    //
    "module": "esnext",
    // 模块解析策略
    "moduleResolution": "bundler",
    // 是否生成辅助 debug 的 .map.js 文件。
    "sourceMap": false,
    // 产物不消除注释
    "removeComments": false,
    // 严格模式类型检查，建议开启
    "strict": true,
    // 不允许有未使用的变量
    // "noUnusedLocals": true,
    // 允许引入 .json 模块
    "resolveJsonModule": true,

    // 与 esModuleInterop: true 配合允许从 commonjs 的依赖中直接按 import XX from 'xxx' 的方式导出 default 模块。
    "allowSyntheticDefaultImports": true,
    "esModuleInterop": true,

    // 在使用 const enum 或隐式类型导入时受到 TypeScript 的警告
    "isolatedModules": true,
    // 检查类型时是否跳过类型声明文件，一般在上游依赖存在类型问题时置为 true。
    "skipLibCheck": true,

    /*关闭ts的检测class初始化的配置 */
    "strictPropertyInitialization": false,
    // 路径别名设置
    // "paths": {
    //   "@snail-js/*": ["packages/*/src"],
    // }
    /* 关闭未使用变量/参数的 TS 检查 */
    "noUnusedLocals": false,    // 控制未使用的局部变量
    "noUnusedParameters": false, // 控制未使用的函数参数
    // 路径别名设置
    "paths": {
      "~editor/*": ["./src/*"]
    },
  },
  // "include": ["typings/env.d.ts", "packages/**/src"]
  "include": ["src"]
}
